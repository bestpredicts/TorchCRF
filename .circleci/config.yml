version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - /.*/
      - deploy:
          filters:
            branches:
              ignore: /.*/
              only:
                - master
            tags:
              only:
                - /.*/
          requires:
            - build

jobs:
  build:
    docker:
      - image: circleci/python:3.7.0

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt
            pip install flake8 coverage coveralls

      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . env/bin/activate
            python setup.py test
            flake8 TorchCRF/*.py --show-source --tee --output-file=flake8.txt
            coverage run --source="TorchCRF/" setup.py test
            coverage report
            coveralls

      - store_artifacts:
          path: test-reports
          destination: test-reports
  deploy:
    docker:
      - image: circleci/python:3.7.0

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt
            pip install twine

      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv env
            . env/bin/activate
            python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = RyuyaIkeda" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            python setup.py sdist bdist_wheel

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload --repository pypi dist/*
